---
version: 3

dotenv:
  - .env

tasks:
  format:
    desc: Format code
    cmds:
      - cargo clippy --fix --allow-staged --allow-dirty
      - cargo fmt --all {{ .CLI_ARGS }}
    sources:
      - ./src/**

  lint:
    desc: Lint the repository.
    cmds:
      - cargo clippy {{ .CLI_ARGS }}
      - cargo fmt --check --all
    sources:
      - ./src/**

  test:
    desc: Run tests.
    cmds:
      - cargo test {{ .CLI_ARGS }}
    sources:
      - ./src/**

  build:
    desc: Build repository.
    cmds:
      - make build
    sources:
      - Cargo.*
      - src/**
    generates:
      - target/**

  generate:
    desc: Fetches and generates openapi specification.
    cmds:
      - curl {{ .YOUTRACK_OPENAPI_SPEC_URL }} -L > openapi.tmp.json
      - jq 'del(.servers) | delpaths([paths | select(.[0] | . == "paths") | select(.[1] | strings | startswith("/admin"))]) | delpaths([paths | select(.[-1] | strings | . == "multipart/form-data")]) | delpaths([paths | select(.[0] | . == "paths") | select(.[1] | strings | startswith("/issues") | not)]) | del(.components.schemas.IssueWorkItem.allOf[1].properties.type)' openapi.tmp.json > openapi.json

      - rm openapi.tmp.json
